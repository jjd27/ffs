#!/usr/bin/env python

import XenAPIPlugin
from xapi.storage.datapath import dmsetup, losetup, tapdisk, image
from xapi.storage import log


def suspend_datapath(session, args):
    # ToDo: add debug context
    dbg = None
    log.debug("%s: in suspend_datapath (args = %s)" % (dbg, args))
    loop = losetup.find(dbg, args['path'])
    if loop:
        dm = dmsetup.find(dbg, loop.block_device())
        dm.suspend(dbg)
    log.debug("%s: looking for tapdisks using filename %s" % (dbg, args['path']))
    tap = tapdisk.find_by_file(dbg, image.Path(args['path']))
    if tap:
        log.debug("%s: found a tapdisk to pause: %s" % (dbg, tap))
        tap.pause(dbg)
    log.debug("%s: suspend_datapath returning True" % (dbg))
    return "True"


def resume_datapath(session, args):
    # ToDo: add debug context
    dbg = None
    log.debug("%s: in resume_datapath (args = %s)" % (dbg, args))
    loop = losetup.find(dbg, args['path'])
    if loop:
        dm = dmsetup.find(dbg, loop.block_device())
        dm.resume(dbg)
    log.debug("%s: looking for tapdisks using filename %s" % (dbg, args['path']))
    tap = tapdisk.find_by_file(dbg, image.Path(args['path']))
    if tap:
        log.debug("%s: found a tapdisk to unpause: %s" % (dbg, tap))
        tap.unpause(dbg)
    log.debug("%s: resume_datapath returning True" % (dbg))
    return "True"


if __name__ == "__main__":
    XenAPIPlugin.dispatch({
        'suspend_datapath': suspend_datapath,
        'resume_datapath': resume_datapath})
